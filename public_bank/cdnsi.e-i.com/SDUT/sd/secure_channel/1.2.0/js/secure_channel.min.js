/*! cdn_sd_secure_channel 2021-04-12 */
function setCallbacksUrl(a){null==_callbacksUrl?_callbacksUrl=a:$.extend(_callbacksUrl,a)}function addCallbackUrl(a,b){null==_callbacksUrl&&(_callbacksUrl={}),_callbacksUrl[a]=b}function disconnect(){null!=_disconnectionUrl&&(window.location.href=_disconnectionUrl)}function addslashes(a){return a=a.replace(/\\/g,"\\\\"),a=a.replace(/\'/g,"\\'"),a=a.replace(/\"/g,'\\"'),a=a.replace(/\0/g,"\\0")}function processEventOnApplication(callback,params){for(var i=0;i<_applicationList.length;i++){var currentApplication=_applicationList[i];if(void 0!=eval("currentApplication."+callback)){var functionString="currentApplication."+callback+"(";void 0!=params&&(functionString+='"'+addslashes(params)+'"'),functionString+=");",eval(functionString)}}}function getCookieValue(a){return value=document.cookie.match(new RegExp(a+"=([^;]+)")),value?value[1]:void 0}function parseQueryString(a){var b={};return $.each(a.split("&"),function(a,c){var d=c.split("=");b[d[0].toString()]=d[1].toString()}),b}function displayInfo(a){_lastDisplay=a,_lastDisplayType="info",processEventOnApplication("onInfoMessage",a)}function displayError(a){_lastDisplay=a,_lastDisplayType="error",processEventOnApplication("onErrorMessage",a)}function debugInfo(a){LoggingService.info(a),processEventOnApplication("onDebugMessage","[INFO] "+a)}function debugSuccess(a){LoggingService.debug(a),processEventOnApplication("onDebugMessage","[SUCCESS] "+a)}function debugError(a){LoggingService.error(a),processEventOnApplication("onDebugMessage","[ERROR] "+a)}function fail(a,b){debugError(a+": "+b),displayError("technicalError")}function getMessage(a,b){return void 0===b&&(b="fr"),SecureChannelMessages[b][a]}function onLicenseVerificationFailed(a){debugError("SConnect license verification failed - code ("+a+")")}function onHardwareFilterCallback(a){var b=a.toUpperCase();return b.search("SHIELD")>=0||0==b.search("GEMALTO VIRTUAL SMARTCARD READER")||0==b.search("GEMALTO BLE READER")?!0:!1}function onHardwareChange(a,b,c){_secureChannelEstablishedCallbackRaised=!1,_readerAvailableCallbackRaised=!1,_retryNumber=0;var d=b.toUpperCase();if(!(d.search("SHIELD")>=0||0==d.search("GEMALTO VIRTUAL SMARTCARD READER")||0==d.search("GEMALTO BLE READER")))return void debugInfo("Invalid reader on hardware change: "+b);switch(_connection||displayInfo("connectReader"),a){case"CARD_IN":displayInfo("readingCard"),debugInfo("A smart card with the ATR "+c+" is inserted in the reader "+b),processEventOnApplication("onCardIn");break;case"CARD_OUT":displayInfo("insertCard"),debugInfo("A card was removed from reader"),processEventOnApplication("onCardOut");break;case"CARD_MUTE":displayInfo("reinsertCard"),debugError("Card mut");break;case"READER_IN":displayInfo("insertCard"),debugInfo("Reader has been plugged in"),processEventOnApplication("onReaderIn");break;case"READER_OUT":displayInfo("reconnectReader"),debugInfo("Reader has been disconnected"),processEventOnApplication("onReaderOut");break;default:return debugError("Unknown event "+a),void displayError("technicalError")}}function onConnectionCallback(a){_connection=a,_readerAvailableCallbackRaised=!0,processEventOnApplication("onReaderAvailable")}function createSecureChannel(){if(!_secureChannelEstablishedCallbackRaised)if(isNotAuthenticationPage())_secureChannelEstablishedCallbackRaised=!0,processEventOnApplication("onSecureChannelEstablished");else{var a={success:function(a){debugSuccess("Command success : statusWord: "+a.statusWord+" - dataOut: "+a.dataOut+" - errorMessage: "+a.errorMessage);var b=a.dataOut.substr(112,14),c=a.dataOut.substr(78,4);_rawReaderSerialNumber=c+b;var d={success:function(a){debugSuccess("Command success : statusWord: "+a.statusWord+" - dataOut: "+a.dataOut+" - errorMessage: "+a.errorMessage),displayInfo("contactingServer"),sendAjaxBankCardRequest(a.dataOut,b,c)},failure:function(a){debugError("Command failed : statusWord: "+a.statusWord+" - dataOut: "+a.dataOut+" - errorMessage: "+a.errorMessage),readerCallbackErrorDefault()}};debugInfo("Reading card number..."),_connection.sendAPDUAsynchronous("D038000000",d)},failure:function(a){debugError("Command failed : statusWord: "+a.statusWord+" - dataOut: "+a.dataOut+" - errorMessage: "+a.errorMessage),readerCallbackErrorDefault()}};debugInfo("Reading PCR information..."),displayInfo("waitReader"),_connection.sendAPDUAsynchronous("8012000100",a)}}function verifyOperation(){sendNextOperationRequest()}function addApplication(a,b){"info"==_lastDisplayType?void 0!=a.onInfoMessage&&a.onInfoMessage(_lastDisplay):"error"==_lastDisplayType&&void 0!=a.onErrorMessage&&a.onErrorMessage(_lastDisplay),_applicationList.push(a),void 0==b&&(b=""),debugInfo("Application added : "+b),_readerAvailableCallbackRaised&&void 0!=a.onReaderAvailable&&a.onReaderAvailable(),_secureChannelEstablishedCallbackRaised&&void 0!=a.onSecureChannelEstablished&&a.onSecureChannelEstablished()}function terminate(a){_disconnectionUrl=a,sendTerminationRequest()}function executeCommand(a){try{debugInfo("Executing command: "+a);var b={success:function(a){debugSuccess("Command success : statusWord: "+a.statusWord+" - dataOut: "+a.dataOut+" - errorMessage: "+a.errorMessage),readerCallbackSuccess(a)},failure:function(a){debugError("Command failed : statusWord: "+a.statusWord+" - dataOut: "+a.dataOut+" - errorMessage: "+a.errorMessage),null!=readerCallbackError?(readerCallbackError(a),readerCallbackError=null):readerCallbackErrorDefault()}};_connection.sendAPDUAsynchronous(a,b)}catch(c){fail("executeCommand",c.message)}return!1}function writeInitialIdentifier(){debugInfo("Writing initial identifier..."),displayInfo("waitReader"),readerCallbackSuccess=openReader,executeCommand("D041000020"+_initialToken+_initialIdentifier)}function openReader(){debugInfo("Opening reader..."),displayInfo("waitReader"),readerCallbackSuccess=openReaderCallbackSuccess,executeCommand("D040000010"+_initialIdentifier)}function sendAjaxBankCardRequest(a,b,c){operationSuccessCallback=bankCardCallback;var d={apduResponse:a,pcrUniqueIdentifier:b,prefix:c};sendAjaxRequest(_callbacksUrl.bankCardUrl,d)}function sendSecureChannelRequest(a){sendAjaxSecureChannelRequest(a.dataOut)}function sendAjaxSecureChannelRequest(a){operationSuccessCallback=secureChannelCallback;var b={apduResponse:a};sendAjaxRequest(_callbacksUrl.establishmentUrl,b)}function sendNextOperationRequest(){operationSuccessCallback=nextOperationCallback,sendAjaxRequest(_callbacksUrl.uiCommandMessageUrl,"")}function sendVerifyOperationRequest(a){sendAjaxVerifyOperationRequest(a.dataOut)}function sendAjaxVerifyOperationRequest(a){operationSuccessCallback=verifyOperationCallback;var b={apduResponse:a,confirm:!0};sendAjaxRequest(_callbacksUrl.uiProcessingUrl,b)}function sendVerifyPromptResponse(a){sendAjaxVerifyPromptResponse(a.dataOut)}function sendAjaxVerifyPromptResponse(a){operationSuccessCallback=verifyPromptResponseCallback;var b={apduResponse:a,confirm:!1};sendAjaxRequest(_callbacksUrl.uiProcessingUrl,b)}function sendTerminationRequest(){sendAjaxTerminationRequest()}function sendAjaxTerminationRequest(){operationSuccessCallback=verifyTerminationRequestCallback,operationFailedCallback=terminationCallback,sendAjaxRequest(_callbacksUrl.terminationCommandMessageUrl,"")}function sendAjaxRequest(a,b){function c(){for(var a=!1,b=0;b<d.length;b++){try{a=d[b]()}catch(c){continue}break}return a}var d=[function(){return new XMLHttpRequest},function(){return new ActiveXObject("Microsoft.XMLHTTP")},function(){return new ActiveXObject("Msxml3.XMLHTTP")},function(){return new ActiveXObject("Msxml2.XMLHTTP")}];debugInfo("Contacting : "+a),_xmlHttpRequest=c();try{_xmlHttpRequest.callbackObject=this}catch(e){return fail("sendAjaxRequest","Unable to establish ajax request"),void displayError("ajaxError")}_xmlHttpRequest.onreadystatechange=ajaxCallback,""==b?(_xmlHttpRequest.open("GET",a,!1),debugInfo("Sending GET request"),_xmlHttpRequest.send()):(_xmlHttpRequest.open("POST",a,!1),_xmlHttpRequest.setRequestHeader("Content-Type","application/json"),debugInfo("Sending : "+JSON.stringify(b)),_xmlHttpRequest.send(JSON.stringify(b)))}function ajaxCallback(){4==this.readyState&&(200==this.status?this.callbackObject.operationSuccessCallback(this.responseText):this.callbackObject.operationFailedCallback(this.readyState,this.status))}function openReaderCallbackSuccess(a){"9000"!=a.statusWord&&fail("openReaderCallback","Open reader failed"),displayInfo("enterPIN"),readerCallbackSuccess=sendSecureChannelRequest,readerCallbackError=function(){displayInfo("reinsertCard")},debugInfo("Secure Channel establishment..."),executeCommand(_secureChannelEstablishmentCommand)}function bankCardCallback(a){try{var b=JSON.parse(a);switch(b.status.returnCode){case"0":return debugInfo("returnCode: "+b.status.returnCode),displayInfo("operationSuccess"),void 0==b.apduCommand||void 0==b.initialIdentifier?void fail("bankCardCallback","Invalid json response from server"):(_secureChannelEstablishmentCommand=b.apduCommand,_initialIdentifier=b.initialIdentifier,void(void 0==b.initialToken?openReader():(_initialToken=b.initialToken,writeInitialIdentifier())));case"1":return debugInfo("returnCode: "+b.status.returnCode),void displayInfo("cardNotTyped");case"2":return debugInfo("returnCode: "+b.status.returnCode),void displayInfo("wrongCard");case"3":return debugInfo("returnCode: "+b.status.returnCode),void displayInfo("wrongReader");case"4":return debugInfo("returnCode: "+b.status.returnCode),void displayInfo("readerBlocked");case"5":return debugInfo("returnCode: "+b.status.returnCode),void displayError("bankCardContractNotFound")}}catch(c){fail("bankCardCallback",c.message)}displayError("technicalError")}function secureChannelCallback(a){try{var b=JSON.parse(a);if(0==b.status.returnCode){try{callJsonLoggerApiToLogInformationsOnServerSide()}catch(c){debugError("Error during call of json-logger API to log informations on server side ("+c+")")}return debugInfo("returnCode : "+b.status.returnCode),displayInfo("secureChannelEstablished"),_secureChannelEstablishedCallbackRaised=!0,void processEventOnApplication("onSecureChannelEstablished")}}catch(d){fail("secureChannelCallback",d.message)}displayError("technicalError")}function nextOperationCallback(a){try{var b=JSON.parse(a);if(0==b.status.returnCode)return debugInfo("returnCode : "+b.status.returnCode),processEventOnApplication("onOperationItemPrompted",b.currentIndex),readerCallbackSuccess=sendVerifyOperationRequest,readerCallbackError=sendVerifyOperationRequest,displayInfo("processReader"),void executeCommand(b.apduCommand)}catch(c){fail("nextOperationCallback",c.message)}}function verifyOperationCallback(a){try{var b=JSON.parse(a);switch(b.status.returnCode){case"0":displayInfo("operationSuccess"),processEventOnApplication("onOperationItemConfirmed",b.currentIndex),b.apduCommand?(readerCallbackSuccess=sendVerifyPromptResponse,readerCallbackError=sendVerifyPromptResponse,executeCommand(b.apduCommand)):processEventOnApplication("onOperationSuccess");break;case"1":processEventOnApplication("onOperationItemConfirmed",b.currentIndex),sendNextOperationRequest();break;case"2":processEventOnApplication("onOperationItemCancelled",b.currentIndex);break;case"3":processEventOnApplication("onOperationItemTimeout",b.currentIndex)}}catch(c){fail("verifyOperationCallback",c.message),processEventOnApplication("onOperationItemCancelled",b.currentIndex)}}function verifyPromptResponseCallback(a){try{var b=JSON.parse(a);0==b.status.returnCode?processEventOnApplication("onOperationSuccess"):(fail("verifyPromptResponseCallback","Verify prompt response error: returnCode = "+b.status.returnCode),processEventOnApplication("onOperationError"))}catch(c){fail("verifyPromptResponseCallback",c.message),processEventOnApplication("onOperationError")}}function terminationCallback(){disconnect()}function verifyTerminationRequestCallback(a){try{var b=JSON.parse(a);0==b.status.returnCode?(readerCallbackSuccess=terminationCallback,readerCallbackError=terminationCallback,debugInfo("Secure Channel termination..."),executeCommand(b.apduCommand)):disconnect()}catch(c){disconnect()}}function operationFailedCallback(a,b){fail("sendAjaxRequest","Unexpected return status from webservice : readyState: "+a+" - status: "+b)}function readerCallbackErrorDefault(){debugError("Invalid command response"),displayError("technicalError")}function callJsonLoggerApiToLogInformationsOnServerSide(){debugInfo("Calling json-logger API to log OS/browser/SConnect/EWC/serial informations on server side...");var a={success:function(a){var b="0"+a,c=b.match(/.{1,2}/g),d=[];for(i=0;i<c.length;i++)d.push(parseInt(c[i],16));var e=d.join("."),f=enex.getBrowserCaracteristics(),g=enex.getVersion(),h=_rawReaderSerialNumber.substring(0,4),j=_rawReaderSerialNumber.substring(4),k=hex2ascii(h.replace(/0/g,""))+j.substring(0,2)+parseInt(j.substring(2,4)).toString(16).toUpperCase()+j.substring(4),l={safetrans_browser_name:f[enex.BROWSER_NAME],safetrans_browser_version:f[enex.BROWSER_VERSION],safetrans_ewc_version:g,safetrans_os_name:f[enex.OPERATING_SYSTEM],safetrans_reader_serial_number:k,safetrans_sconnect_version:e};$.ajax({method:"POST",contentType:"application/json",url:"/secure_channel/json-logger.html",data:JSON.stringify(l)})},failure:function(a){debugError("An error occurred: ("+a.message+") - ("+a.errorCode+")")}};enex.getSConnectVersion(a)}function hex2ascii(a){for(var b="",c=0;c<a.length;c+=2)b+=String.fromCharCode(parseInt(a.substr(c,2),16));return b}function isNotAuthenticationPage(){return 0==$("#ident_safetrans").length}function launchEnexInitialization(){return $("#menu_safetrans").length?$("#menu_safetrans").parent().parent().hasClass("ei_md_selected"):!0}function isEnexInstalled(){enex.is_installed({success:function(){initializeEnex()},failure:function(){var a={},b=getCookieValue("cm_url");if(b){var c=b.split("?");c.length>1&&(a=parseQueryString(c[1]))}return void 0!=a&&"HUB_SL"==a.media?(OpenLightBox("idLightBox"),void $("#idContent").focus()):void initializeEnex()}})}var SecureChannelMessages={fr:{insertCard:"Veuillez ins\xe9rer votre carte dans le lecteur",reinsertCard:"Veuillez r\xe9ins\xe9rer votre carte dans le lecteur",connectReader:"Veuillez brancher votre lecteur",reconnectReader:"Veuillez rebrancher votre lecteur",readingCard:"Lecture de la carte en cours...",technicalError:'Erreur technique. <a href="javascript:window.location.reload();">Veuillez r\xe9essayer.</a>',contactingServer:"Contact du serveur en cours...",operationSuccess:"Op\xe9ration r\xe9alis\xe9e avec succ\xe8s",secureChannelEstablished:"Canal s\xe9curis\xe9 \xe9tabli",processReader:"Veuillez suivre les instructions sur votre lecteur",viewReader:"Veuillez valider l'\xe9tape currentOperation/totalOperation sur votre lecteur",operationValidatedSuccessfully:"Votre op\xe9ration a \xe9t\xe9 valid\xe9e",wrongCard:"Une carte invalide a \xe9t\xe9 ins\xe9r\xe9e. Merci d'ins\xe9rer une autre carte",cardNotTyped:"Impossible de r\xe9cup\xe9rer le type de carte. Merci d'ins\xe9rer une autre carte",invalidReader:"Lecteur non reconnu",communicationError:"Rebranchez votre lecteur",ajaxError:"Votre navigateur ne g\xe8re pas les requ\xeates AJAX. Veuillez vous identifier",enterPIN:"Veuillez saisir le code PIN de votre carte sur le lecteur",waitReader:"En attente d'informations du lecteur...",wrongReader:"Le lecteur n'est pas associ\xe9 \xe0 votre contrat. Merci d'utiliser un autre lecteur",readerBlocked:"Votre lecteur est bloqu\xe9. Veuillez contacter votre conseiller",bankCardContractNotFound:"Aucun contrat carte rattach\xe9 \xe0 l'utilisateur. Veuillez contacter votre conseiller"},en:{insertCard:"Please insert your card into the card reader",reinsertCard:"Please insert your card again into the card reader",connectReader:"Please connect your card reader",reconnectReader:"Please reconnect your card reader",readingCard:"Reading the card...",technicalError:'Technical error. <a href="javascript:window.location.reload();">Please try again.</a>',contactingServer:"Establishing contact with server...",operationSuccess:"Operation successfully completed",secureChannelEstablished:"Secure channel established",processReader:"Please follow the instructions on your card reader",viewReader:"Please confirm step currentOperation/totalOperation on your card reader",operationValidatedSuccessfully:"The operation has been confirmed",wrongCard:"The inserted card is invalid. Please insert another card",cardNotTyped:"This card type is unknown. Please insert another card",invalidReader:"Card reader not recognized",communicationError:"Reconnect your card reader",ajaxError:"Your browser cannot perform AJAX queries. Please identify yourself.",enterPIN:"Please enter the PIN of your card into the card reader",waitReader:"Waiting for information from the reader...",wrongReader:"The card reader is not associated with your contract. Please use another reader",readerBlocked:"Your card reader is blocked. Please contact your relationship manager",bankCardContractNotFound:"No card contract associated with this user. Please contact your relationship manager"},de:{insertCard:"Bitte f\xfchren Sie Ihre Karte in den Kartenleser ein",reinsertCard:"Bitte f\xfchren Sie Ihre Karte erneut in den Kartenleser ein",connectReader:"Bitte schlie\xdfen Sie Ihren Kartenleser an",reconnectReader:"Bitte schlie\xdfen Sie Ihren Kartenleser erneut an",readingCard:"Die Karte wird gelesen...",technicalError:'Technischer Fehler. <a href="javascript:window.location.reload();">Bitte versuchen Sie es noch einmal.</a>',contactingServer:"Verbindung zum Server wird hergestellt...",operationSuccess:"Transaktion erfolgreich ausgef\xfchrt",secureChannelEstablished:"Gesicherte Verbindung aufgebaut",processReader:"Bitte folgen Sie den Anweisungen auf Ihrem Kartenleser",viewReader:"Bitte best\xe4tigen Sie Schritt currentOperation/totalOperation auf Ihrem Kartenleser",operationValidatedSuccessfully:"Ihre Transaktion wurde best\xe4tigt",wrongCard:"Eine ung\xfcltige Karte wurde eingef\xfchrt. Bitte f\xfchren Sie eine andere Karte ein",cardNotTyped:"Dieser Kartentyp ist unbekannt. Bitte f\xfchren Sie eine andere Karte ein",invalidReader:"Kartenleser nicht erkannt",communicationError:"Schlie\xdfen Sie Ihren Kartenleser erneut an",ajaxError:"Ihr Internet-Browser kann keine AJAX Abfragen ausf\xfchren. Bitte melden Sie sich an",enterPIN:"Bitte geben Sie den PIN-Code Ihrer Karte auf dem Kartenleser ein",waitReader:"Warte auf Informationen von Ihrem Leser...",wrongReader:"Der Kartenleser ist mit Ihrem Vertrag nicht verbunden. Bitte nutzen Sie einen anderen Kartenleser.",readerBlocked:"Ihr Kartenleser ist blockiert. Bitte kontaktieren Sie Ihren Kundenberater",bankCardContractNotFound:"F\xfcr diesen Nutzer ist kein Kartenvertrag hinterlegt. Bitte kontaktieren Sie Ihren Kundenberater."},es:{insertCard:"Introduzca su tarjeta en el lector",reinsertCard:"Vuelva a introducir su tarjeta en el lector",connectReader:"Conecte su lector",reconnectReader:"Vuelva a conectar su lector",readingCard:"Lectura de la tarjeta en curso...",technicalError:'Error t\xe9cnico. <a href="javascript:window.location.reload();">Int\xe9ntelo de nuevo.</a>',contactingServer:"Contacto del servidor en curso...",operationSuccess:"Operaci\xf3n realizada con \xe9xito",secureChannelEstablished:"Canal seguro establecido",processReader:"Siga las instrucciones en su lector",viewReader:"Valide la etapa 1/2 en su lector",operationValidatedSuccessfully:"Su operaci\xf3n ha sido validada",wrongCard:"Se ha introducido una tarjeta no v\xe1lida. Introduzca otra tarjeta",cardNotTyped:"No se puede recuperar el tipo de tarjeta. Introduzca otra tarjeta",invalidReader:"Lector no reconocido",communicationError:"Vuelva a conectar su lector",ajaxError:"Su navegador no gestiona las solicitudes AJAX. Identif\xedquese",enterPIN:"Introduzca el c\xf3digo PIN de su tarjeta en el lector",waitReader:"A la espera de informaci\xf3n del lector...",wrongReader:"El lector no est\xe1 vinculado a su contrato. Utilice otro lector",readerBlocked:"Su lector est\xe1 bloqueado. Contacte con su gestor",bankCardContractNotFound:"Ning\xfan contrato vinculado al usuario. Contacte con su gestor"}},_secureChannelEstablishedCallbackRaised=!1,_readerAvailableCallbackRaised=!1,_callbacksUrl=null,_disconnectionUrl=null,_connection=null,_xmlHttpRequest=null,readerCallbackSuccess=null,readerCallbackError=null,_applicationList=[],_lastDisplay="",_lastDisplayType="",_retryNumber=0,_intervalHandler=null,_secureChannelEstablishmentCommand="",_initialIdentifier="",_initialToken="",_rawReaderSerialNumber="";initializeEnex=function(){var a=null,b=onHardwareFilterCallback,c=onConnectionCallback,d=onHardwareChange,e=onLicenseVerificationFailed;"undefined"==typeof _gemaltoEzioWebConnectorCdnPath&&(_gemaltoEzioWebConnectorCdnPath="/"),"undefined"==typeof _serverCertificateSerialNumber&&(_serverCertificateSerialNumber="");var f={addonPath:_gemaltoEzioWebConnectorCdnPath+"sconnect/addons/",eulaPath:_gemaltoEzioWebConnectorCdnPath+"sconnect/eula/",extPath:_gemaltoEzioWebConnectorCdnPath+"sconnect/extensions/",faqPath:_gemaltoEzioWebConnectorCdnPath+"sconnect/faq/",imgPath:_gemaltoEzioWebConnectorCdnPath+"sconnect/images/",licensePath:"/sconnect/licence/"+window.location.hostname+_serverCertificateSerialNumber+".lic"},g=!1,h=!1,i=null,j={success:function(){debugInfo("eNex initialization success"),displayInfo("connectReader")},failure:function(a){fail("initializeEnex","Initialization failed. The error is "+a.message)}};try{enex.init(a,b,c,d,e,f,g,h,i,j)}catch(k){fail("initializeEnex",k.message)}},$().ready(function(){$("#idLightBox").addClass("a_blocappli masque ei_blocmodal_env"),launchEnexInitialization()&&isEnexInstalled()}),$("#menu_safetrans").click(isEnexInstalled),window.onunload=function(){enex.dispose()};